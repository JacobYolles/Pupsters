{"ast":null,"code":"import _classCallCheck from \"/Users/jacobyolles/Desktop/code/pupsters/pupster/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jacobyolles/Desktop/code/pupsters/pupster/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jacobyolles/Desktop/code/pupsters/pupster/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jacobyolles/Desktop/code/pupsters/pupster/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jacobyolles/Desktop/code/pupsters/pupster/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jacobyolles/Desktop/code/pupsters/pupster/src/pages/Search.js\";\nimport React, { Component, Fragment } from \"react\";\nimport API from \"../utils/API\"; // const Search = () => {\n//     return <h1> Search By Breed!</h1>\n// }\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      breedList: [],\n      selectedBreed: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getBreeds().then(function (res) {\n        return _this2.setState({\n          breedList: res.data.message\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Search\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"breed-choice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Choose a breed: \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        list: \"breed-type\",\n        id: \"breed-choice\",\n        name: \"breed-choice\",\n        value: this.state.selectedBreed,\n        onChange: this.handleInputChange,\n        key: \"breed-choice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"datalist\", {\n        id: \"breed-type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.state.breedList.map(function (breed) {\n        return React.createElement(\"option\", {\n          value: breed,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/jacobyolles/Desktop/code/pupsters/pupster/src/pages/Search.js"],"names":["React","Component","Fragment","API","Search","state","breedList","selectedBreed","getBreeds","then","res","setState","data","message","catch","err","console","log","handleInputChange","map","breed"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CAEA;AACA;AACA;;IAEMC,M;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,aAAa,EAAE;AAFX,K;;;;;;wCAKY;AAAA;;AAChBJ,MAAAA,GAAG,CAACK,SAAJ,GACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAACL,UAAAA,SAAS,EAAGI,GAAG,CAACE,IAAJ,CAASC;AAAtB,SAAd,CAAJ;AAAA,OADT,EAECC,KAFD,CAEO,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFV;AAGH;;;wCAEmB,CAEnB;;;6BAEQ;AACL,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AACA,QAAA,IAAI,EAAC,YADL;AAEA,QAAA,EAAE,EAAC,cAFH;AAGA,QAAA,IAAI,EAAC,cAHL;AAIA,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWE,aAJlB;AAKA,QAAA,QAAQ,EAAE,KAAKW,iBALf;AAMA,QAAA,GAAG,EAAC,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAYI;AAAU,QAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKb,KAAL,CAAWC,SAAX,CAAqBa,GAArB,CAAyB,UAAAC,KAAK;AAAA,eAAK;AAAQ,UAAA,KAAK,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAL;AAAA,OAA9B,CADJ,CAZJ,EAeI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ,CAFJ,CADJ;AAsBH;;;;EAvCgBnB,S;;AA2CrB,eAAeG,MAAf","sourcesContent":["import React, { Component, Fragment } from \"react\"\nimport API from \"../utils/API\"\n\n// const Search = () => {\n//     return <h1> Search By Breed!</h1>\n// }\n\nclass Search extends Component {\n    state = {\n        breedList: [],\n        selectedBreed: \"\"\n    }\n\n    componentDidMount() {\n        API.getBreeds()\n        .then(res => this.setState({breedList : res.data.message}))\n        .catch(err => console.log(err));\n    }\n\n    handleInputChange() {\n        \n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h1>Search</h1>\n                <form>\n                    <label htmlFor=\"breed-choice\">Choose a breed: </label>\n                    <br></br>\n                    <input \n                    list=\"breed-type\" \n                    id=\"breed-choice\" \n                    name=\"breed-choice\"\n                    value={this.state.selectedBreed}\n                    onChange={this.handleInputChange}\n                    key=\"breed-choice\" \n                    />\n                    {/* Datalist is holding the list of array variables kind of behind the scenes. */}\n                    <datalist id=\"breed-type\">\n                       {this.state.breedList.map(breed =>  <option value={breed} />)}\n                    </datalist>\n                    <button type=\"button\" className=\"btn btn-primary\">Submit</button>\n                </form>\n            </Fragment>\n        )\n    }\n\n}\n\nexport default Search; "]},"metadata":{},"sourceType":"module"}